version: '3.5'

services:
  details:
    build:
      dockerfile: Dockerfile.go
      context: .
    depends_on:
      - postgres
    volumes:
      - ./details/:/opt/app/api
    networks:
      - comnet
  filter:
    build:
      dockerfile: Dockerfile.go
      context: .
    depends_on:
      - postgres
    volumes:
      - ./filter/:/opt/app/api
    networks:
      - comnet
  products:
    build:
      dockerfile: Dockerfile.go
      context: .
    depends_on:
      - postgres
    volumes:
      - ./products/:/opt/app/api
    networks:
      - comnet
  searcher:
    build:
      dockerfile: Dockerfile.go
      context: .
    depends_on:
      - postgres
    volumes:
      - ./searcher/:/opt/app/api
    networks:
      - comnet


  frontend:
    build:
      dockerfile: Dockerfile.fe
      context: ./frontend
    volumes:
      - ./frontend/:/build
    networks:
      - comnet
    ports:
      - "3000:80"

  nginx:
    build:
      dockerfile: Dockerfile.nginx
      context: .
    depends_on:
      - frontend
      - details
      - filter
      - products
      - searcher
    networks:
      - comnet
    ports:
      - "8080:80"

  postgres:
    container_name: postgres
    image: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme}
      PGDATA: /data/postgres
    volumes:
       - ./postgres:/data/postgres
    ports:
      - "5432:5432"
    networks:
      - comnet
    restart: unless-stopped

networks:
  comnet:
    driver: bridge

volumes:
    postgres: